#!/bin/bash

set -euo pipefail

while [[ $# -gt 0 ]]; do
	opt="$1"
	shift
	case "${opt}" in
		"--")
			break
			;;
		"-h")
			echo "Usage: crypteject device"
			exit 1
			;;
		*)
			DEVICE="${opt}"
			;;
	esac
done

if [[ -z "${DEVICE+x}" ]]; then
	echo "Device must be specified to continue."
	exit 1
fi

if [[ ! -b "${DEVICE}" ]]; then
	echo "Specified device ${DEVICE} is not a block device."
	exit 1
fi

ID_FS_UUID=$(udevadm info --query=property --property=ID_FS_UUID --value "${DEVICE}")
CRYPT_DEVICE="/dev/mapper/crypt-${ID_FS_UUID}"

DEVPATH=$(udevadm info --query=property --property=ID_PATH --value "${DEVICE}")
if [[ -z "${DEVPATH}" ]]; then
	DEVPATH=$(udevadm info --query=property --property=DEVPATH --value "${DEVICE}")
fi
MOUNTDIR=/mnt/$(uuidgen --md5 --namespace @url --name "${DEVPATH}")

if [[ ! -e "${CRYPT_DEVICE}" ]]; then
	echo "Cannot unmount LUKS device ${CRYPT_DEVICE}; path does not exist."
	exit 1
fi

if ! umount "${CRYPT_DEVICE}" &>/dev/null; then
	echo "Could not unmount filesystem from ${CRYPT_DEVICE}"
	exit 1
fi

if ! /sbin/cryptsetup luksClose "$(basename "${CRYPT_DEVICE}")" &>/dev/null; then
	echo "Could not close LUKS device ${CRYPT_DEVICE}"
	exit 1
fi

if ! { touch "/mnt/.crypteject" && rmdir -p "${MOUNTDIR}" &>/dev/null || true && rm "/mnt/.crypteject"; }; then
	echo "Could not remove mount directory ${MOUNTDIR}"
	exit 1
fi

if ! { sync && hdparm -Y "${DEVICE}" &>/dev/null; }; then
	echo "WARNING: device ${DEVICE} could not be synced or powered down."
else
	echo "Device ${DEVICE} can now be safely removed."
fi
exit 0
